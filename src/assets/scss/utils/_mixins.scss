@import "functions";
@import "variables/breakpoints";

@mixin b($name, $namespaced: true, $with-dot: true) {
  @at-root {
    #{ b($name, $namespaced, $with-dot) } {
      @content;
    }
  }
}

@mixin e($name, $scope: null, $at-root: true) {
  @if ($at-root) {
    @at-root {
      #{ e($name, $scope) } {
        @content;
      }
    }
  }

  @else {
    #{ e($name, $scope) } {
      @content;
    }
  }
}

@mixin m($name, $scope: null, $at-root: true) {
  @if ($at-root) {
    @at-root {
      #{ m($name, $scope) } {
        @content;
      }
    }
  }

  @else {
    #{ m($name, $scope) } {
      @content;
    }
  }
}

@mixin state($mod, $root: null, $at-root: false) {
  @if ($root == null) {
    $root: &;
  }

  @if ($at-root) {
    #{ m($mod, $root) } {
      @content;
    }
  }

  @else {
    @at-root {
      #{ m($mod, $root) } {
        @content;
      }
    }
  }
}

@mixin dblState($mod, $mod2, $root: null, $at-root: false) {
  @if ($root == null) {
    $root: &;
  }

  @if ($at-root) {
    #{ m($mod, $root, &, false) }#{ m($mod2, $root, &, false) } {
      @content;
    }
  }

  @else {
    @at-root {
      #{ m($mod, $root, &, false) }#{ m($mod2, $root, &, false) } {
        @content;
      }
    }
  }
}

@mixin when($state) {
  @at-root {
    &.#{$STATE_PREFIX + $state} {
      @content;
    }
  }
}

@mixin res($key, $map: $st-breakpoints) {
  @if map-has-key($map, $key) {
    @media only screen and #{inspect(map-get($map, $key))} {
      @content;
    }
  }

  @else {
    @warn "Undefeined points: `#{$map}`";
  }
}
