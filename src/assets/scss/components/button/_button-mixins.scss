@import "../../utils/functions";
@import "../../utils/mixins";
@import "../../utils/variables";
@import "variables";

@mixin addSize($name, $padding, $min-width, $height: auto) {
  @at-root {
    #{ m($name) } {
      min-width: $min-width;
      height: $height;
      padding: $padding;
    }
  }
}

@mixin button-size($padding-vertical, $padding-horizontal, $font-size, $border-radius, $root) {
  padding: $padding-vertical $padding-horizontal;
  font-size: $font-size;
  border-radius: $border-radius;

  &#{ m('round', $root) } {
    padding: $padding-vertical $padding-horizontal;
  }
}

@mixin button-variant($color, $background-color, $border-color, $root) {
  color: $color;
  background-color: $background-color;
  border-color: $border-color;

  &:hover,
  &:focus {
    color: $color;
    background: mix($st-color-white, $background-color, $st-button-hover-tint-percent);
    border-color: mix($st-color-white, $border-color, $st-button-hover-tint-percent);
  }

  &:active {
    color: $color;
    background: mix($st-color-black, $background-color, $st-button-active-shade-percent);
    border-color: mix($st-color-black, $border-color, $st-button-active-shade-percent);
    outline: none;
  }

  &#{ m('active', $root) } {
    color: $color;
    background: mix($st-color-black, $background-color, $st-button-active-shade-percent);
    border-color: mix($st-color-black, $border-color, $st-button-active-shade-percent);
  }

  &#{ m('disabled', $root) } {
    &,
    &:hover,
    &:focus,
    &:active {
      color: $st-color-white;
      background-color: mix($background-color, $st-color-white);
      border-color: mix($border-color, $st-color-white);
    }
  }

  &#{ m('plain', $root) } {
    @include button-plain($background-color, $root);
  }

  #{ b('icon') } {
    color: $color;
  }
}

@mixin button-plain($color, $root) {
  color: $color;
  background: mix($st-color-white, $color, 90%);
  border-color: mix($st-color-white, $color, 60%);

  &:hover,
  &:focus {
    color: $st-color-white;
    background: $color;
    border-color: $color;
  }

  &:active {
    color: $st-color-white;
    background: mix($st-color-black, $color, $st-button-active-shade-percent);
    border-color: mix($st-color-black, $color, $st-button-active-shade-percent);
    outline: none;
  }

  &#{ m('disabled', $root) } {
    &,
    &:hover,
    &:focus,
    &:active {
      color: mix($st-color-white, $color, 40%);
      background-color: mix($st-color-white, $color, 90%);
      border-color: mix($st-color-white, $color, 80%);
    }
  }
}

@mixin addBaseStyle($name, $accentColor, $secondaryColor) {
  @at-root {
    #{ m($name) } {
      color: $secondaryColor;
      background: $accentColor;
      border-color: $accentColor;
    }

    #{ m($name) }:not(#{ m('disabled') }):hover {
      color: $accentColor;
      background: $secondaryColor;
    }

    #{ m($name) } #{ e('icon') + b('icon') } {
      color: $secondaryColor;
    }

    #{ m($name) }:not(#{ m('disabled') }):hover #{ e('icon') + b('icon') } {
      color: $accentColor;
    }
  }
}

@mixin addPlainStyle($name, $accent-color, $secondary-color) {
  $plain-style-class: #{ m($name) + m('plain') } !global;

  @at-root {
    #{ $plain-style-class } {
      color: $accent-color;
      background: transparent;
      border-color: $accent-color;
    }

    #{ $plain-style-class }:not(#{ m('disabled') }):hover {
      color: $secondary-color;
      background: $accent-color;
    }

    #{ $plain-style-class } #{ e('icon') }#{ b('icon') } {
      color: $accent-color;
    }

    #{ $plain-style-class }:not(#{ m('disabled') }):hover #{ e('icon') + b('icon') } {
      color: $secondary-color;
    }
  }
}

@mixin addTextStyle($name, $accent-color) {
  $text-style-class: #{ m($name) + m('text') } !global;

  @at-root {
    #{ $text-style-class } {
      color: $accent-color;
      background: transparent;
    }

    #{ $text-style-class }:not(#{ m('disabled') }):hover {
      color: lighten($accent-color, 10);
      background: transparent;
    }

    #{ $text-style-class }:not(#{ m('disabled') }):active {
      color: darken($accent-color, 10);
      background: transparent;
    }
  }
}

@mixin addCircleStyle($name, $accent-color, $secondary-color) {
  $circle-style-class: #{ m($name) + m('circle') } !global;

  @at-root {
    #{ $circle-style-class } {
      color: $accent-color;
      background: transparent;
      border-color: $accent-color;
    }

    #{ $circle-style-class }:not(#{ m('disabled') }):hover {
      color: $secondary-color;
      background: $accent-color;
    }

    #{ $circle-style-class } #{ e('icon') + b('icon') } {
      color: $accent-color;
    }

    #{ $circle-style-class }:not(#{ m('disabled') }):hover #{ e('icon') + b('icon') } {
      color: $secondary-color;
    }
  }
}

@mixin buttonStyle($name, $accent-color, $secondary-color) {
  @at-root {
    #{ m($name) } {
      color: $accent-color;
      background: transparent;
      border-color: $accent-color;
    }

    #{ m($name) }:not(#{ m('disabled') }):not(#{ m('text') }):hover {
      color: $secondary-color;
      background: $accent-color;
    }

    #{ m($name) + m('text') }:not(#{ m('disabled') }):hover {
      color: lighten($accent-color, 10);
    }

    #{ m($name) + m('text') }:not(#{ m('disabled') }):active {
      color: darken($accent-color, 10);
    }

    #{ m($name) } #{ e('icon') + b('icon') } {
      color: $accent-color;
    }

    #{ m($name) }:not(#{ m('disabled') }):not(#{ m('text') }):hover #{ e('icon') + b('icon') } {
      color: $secondary-color;
    }

    #{ m($name) + m('text') }:not(#{ m('disabled') }):hover #{ e('icon') + b('icon') } {
      color: lighten($accent-color, 10);
    }

    #{ m($name) + m('text') }:not(#{ m('disabled') }):active #{ e('icon') + b('icon') } {
      color: darken($accent-color, 10);
    }
  }
}

@mixin buttonType($name, $padding, $border-radius, $min-width, $border-width) {
  @at-root {
    #{ m($name) } {
      min-width: $min-width;
      padding: $padding;
      background: transparent;
      border: solid $border-width;
      border-radius: $border-radius;
    }
  }
}

@mixin buttonStyleFilled($name, $accent-color, $secondary-color) {
  @at-root {
    &#{ b($name) } {
      color: $secondary-color;
      background: $accent-color;
      border-color: $accent-color;
    }

    &#{ b($name) } &#{ e('icon') }#{ b('icon') } {
      color: $st-color-white;
    }

    &#{ b($name) }:not(#{ m('disabled') }):hover {
      color: $accent-color;
      background: transparent;
    }

    &#{ b($name) }:not(#{ m('disabled') }):hover #{ e('icon') + b('icon') } {
      color: $accent-color;
    }
  }
}

@mixin buttonTypeFilled($name, $padding, $border-radius, $min-width, $border-width) {
  @at-root {
    #{ m($name) } {
      min-width: $min-width;
      padding: $padding;
      border: solid $border-width;
      border-radius: $border-radius;
    }
  }
}
