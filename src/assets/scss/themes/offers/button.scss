// Import default component's file with styles
@import '../../../../components/button/style';

@include b(button) {
  $root: &;

  height: 42px;
  padding: 0 20px;
  padding-bottom: 2px;
  font-size: 14px;
  font-style: normal;
  font-weight: normal;
  font-stretch: normal;
  line-height: 1.71;
  color: $st-color-primary;
  text-align: center;
  letter-spacing: normal;
  cursor: pointer;
  background: transparent;
  border: 1px solid $st-color-primary;
  border-radius: 21px;
  outline: none;

  &:hover,
  &:focus {
    color: $st-color-white;
    background-color: $st-color-primary-hover;
    border-color: $st-color-primary-hover;
  }

  &:active {
    color: $st-color-white;
    background-color: $st-color-primary-active;
    border-color: $st-color-primary-active;
  }

  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }

  &--default,
  &--primary {
    color: $st-color-white;
    background-color: $st-color-primary;

    &:hover,
    &:focus {
      color: $st-color-white;
      background-color: $st-color-primary-hover;
      border-color: $st-color-primary-hover;
    }

    &:active {
      color: $st-color-white;
      background-color: $st-color-primary-active;
      border-color: $st-color-primary-active;
    }

    &:disabled {
      color: $st-color-white;
      background-color: $st-color-primary;
      border-color: $st-color-primary;
    }
  }

  @include m('success') {
    color: $st-color-success;
    border-color: $st-color-success;

    &:hover,
    &:focus {
      color: $st-color-white;
      background-color: mix($st-color-black, $st-color-success, 10);
      border-color: mix($st-color-black, $st-color-success, 10);
    }

    &:active {
      color: $st-color-white;
      background-color: mix($st-color-black, $st-color-success, 20);
      border-color: mix($st-color-black, $st-color-success, 20);
    }
  }

  @include m('info') {
    color: $st-color-primary;
    border-color: $st-color-primary;

    &:hover,
    &:focus {
      color: $st-color-white;
      background-color: mix($st-color-black, $st-color-primary, 10);
      border-color: mix($st-color-black, $st-color-primary, 10);
    }

    &:active {
      color: $st-color-white;
      background-color: mix($st-color-black, $st-color-primary, 20);
      border-color: mix($st-color-black, $st-color-primary, 20);
    }

    &:not(#{ m('disabled', $root) }):focus {
      color: $st-color-white;
      background-color: $st-color-primary;
      border-color: $st-color-primary;

      #{ b('icon') } {
        color: $st-color-primary;
      }
    }

    &:not(#{ m('disabled', $root) }):hover {
      background-color: $st-color-primary;
      border-color: $st-color-primary;
    }
  }

  @include m('warning') {
    color: $st-color-warning;
    border-color: $st-color-warning;

    &:hover,
    &:focus {
      color: $st-color-white;
      background-color: mix($st-color-black, $st-color-warning, 10);
      border-color: mix($st-color-black, $st-color-warning, 10);
    }

    &:active {
      color: $st-color-white;
      background-color: mix($st-color-black, $st-color-warning, 20);
      border-color: mix($st-color-black, $st-color-warning, 20);
    }
  }

  @include m('danger') {
    color: $st-color-error;
    border-color: $st-color-error;

    &:hover,
    &:focus {
      color: $st-color-white;
      background-color: mix($st-color-black, $st-color-error, 10);
      border-color: mix($st-color-black, $st-color-error, 10);
    }

    &:active {
      color: $st-color-white;
      background-color: mix($st-color-black, $st-color-error, 20);
      border-color: mix($st-color-black, $st-color-error, 20);
    }
  }

  @include m('remove') {
    color: $st-color-error;
    border-color: $st-color-error;

    &:hover,
    &:focus {
      color: $st-color-white;
      background-color: mix($st-color-black, $st-color-error, 10);
      border-color: mix($st-color-black, $st-color-error, 10);
    }

    &:active {
      color: $st-color-white;
      background-color: mix($st-color-black, $st-color-error, 20);
      border-color: mix($st-color-black, $st-color-error, 20);
    }
  }

  @include m('cancel') {
    color: $st-color-dark-gray;
    border-color: $st-color-dark-gray;

    &:hover,
    &:focus {
      color: $st-color-white;
      background-color: mix($st-color-black, $st-color-dark-gray, 10);
      border-color: mix($st-color-black, $st-color-dark-gray, 10);
    }

    &:active {
      color: $st-color-white;
      background-color: mix($st-color-black, $st-color-dark-gray, 20);
      border-color: mix($st-color-black, $st-color-dark-gray, 20);
    }
  }

  &--small,
  &--mini {
    height: 32px;
  }

  @include m('text') {
    padding: 0;
    border: none;

    &:not(#{ m('disabled', $root) }):hover,
    &:not(#{ m('disabled', $root) }):focus {
      color: $st-color-primary-hover;

      #{ b('icon') } {
        color: $st-color-primary-hover;
      }
    }

    &:not(#{ m('disabled', $root) }):active {
      color: $st-color-primary-hover;

      #{ b('icon') } {
        color: $st-color-primary-hover;
      }
    }
  }

  @include e('icon') {
    margin-right: 5px;
  }

  @include m('circle') {
    width: 42px;
    padding: 0;

    .st-button__icon {
      margin: 0;
    }
  }

  .st-button__icon {
    color: inherit;
  }
}
